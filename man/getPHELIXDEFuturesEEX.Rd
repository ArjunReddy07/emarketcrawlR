% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrapeData.R
\name{getPHELIXDEFuturesEEX}
\alias{getPHELIXDEFuturesEEX}
\title{getPHELIXDEFuturesEEX}
\usage{
getPHELIXDEFuturesEEX(startDate, endDate, product)
}
\arguments{
\item{startDate}{- Set the start date for the price data period ("YYYY-MM-DD", character)}

\item{endDate}{- Set the end date for the price data period ("YYYY-MM-DD", character)}

\item{product}{- Set the product type == Day, Weekend, Week, Month, Quarter or Year --> IT IS RECOOMEND TO ONLY USE "DAY"}
}
\value{
a data.frame with the columns of the table seen on the EEX website. The name column identifies the product. It is not of type Date or DateTime!
}
\description{
This function returns the price data of the EEX Phelix DE Futures as seen at https://www.eex.com/en/market-data/power/futures/phelix-de-futures
Prices are in EUR/MWh and Volume in MWh. The returned data.frame mimics the table at the EEX website (+ BestBid/BestAsk volume).
The name column contains no Date or DateTime object (simply a factor).
The data is retrieved by sequentially scraping the data of each day. Therefore the data of the next day (regarding input date) is retrieved.
For the Weekend saturday and sunday data is retrieved (at friday dates).
Since the next data observation is retrieved (because tables are showing a lot of null values) the function is optimized for the "Day" product.
For other products like Week or Year, you will get only the next week or year data of the input date.
Note that the website only provides a limited history of the price data! This also depends on the product (Day, Week etc.)
}
\examples{
df = getPHELIXDEFuturesEEX("2017-08-02", "2017-08-04", "Day")

}
